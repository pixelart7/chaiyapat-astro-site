---
import { Image } from 'astro:assets';
import { bdb, generateSlug, slugToUrl } from "@lib/braindb.mjs";

import NoteShare from '@components/NoteShare.svelte';

import NoteProseSection from '@components/NoteProseSection.astro';
import NoteStage from '@components/NoteStage.astro';
import BaseLayout from './BaseLayout.astro'

import LogoGarden from 'src/assets/logo-garden.webp';

import PhInfoBold from '~icons/ph/info-bold'
import NoteCardSmall from '@components/NoteCardSmall.astro';
// import { generatePathSlug } from 'src/garden';

const { title, created, updated, cover, abstract, unlisted, headings, node, entry } = Astro.props.frontmatter || Astro.props;

const doc = await bdb.findDocument(`/${entry.id}`);

const outgoingLinks = (await (doc as any).db.query.link.findMany({
  where: (l, { eq }) => (eq(l.from, `/${entry.id}`)),
})).map((l) => ({
  url: (l.to) ? slugToUrl(generateSlug(l.to)) : '',
  title: l.to_slug,
  abstract: '',
  isExist: !!l.to,
}))

---

<BaseLayout title={title} cover={cover || String(new URL('ogimage-note.png', Astro.site))} description={abstract}>
  <div class="bg-reader dark:bg-reader-dark shadow-2xl shadow-reader dark:shadow-reader-dark">
    <main class="mx-auto max-w-container pt-6 sm:pt-12">
      <div class="px-4 md:px-0 lg:pr-[16ch]">
        <div class="max-w-[64ch] lg:max-w-[81ch] mx-auto">
          <a href="/garden" class="text-sm p-1 hover:bg-primary-500/10 rounded -mx-1">
            ‚Üê Garden Home <Image aria-hidden="true" src={LogoGarden} class="inline w-4 mb-1" alt="">
          </a>
        </div>
      </div>
      <div class="lg:pr-[16ch]">
        { (cover) &&
          <div class="max-w-[64ch] lg:max-w-[81ch] mx-auto mt-6 aspect-[1.91/1] bg-neutral-300 dark:bg-neutral-800 sm:rounded overflow-hidden border-t border-b sm:border-x">
            <img src={cover} class="object-cover" alt={`Cover image for ${title}`} aria-hidden="true" />
          </div>
        }
      </div>
      <article class="pb-12 px-4">
        <div class="border-b border-gray-500/50 mb-12 pb-12 lg:pr-[16ch]">
          <header class="max-w-[64ch] lg:max-w-[81ch] mx-auto pt-8">
            {
              entry.id.split('/').slice(0, -1).length > 0 &&
              <ul class="font-display text-sm opacity-60 font-medium mb-1">
                {
                  entry.id.split('/').slice(0, -1).map((ud) => 
                    <li class="inline"><span>{ud}</span><span class="opacity-75"> /</span></li>
                  )
                }
              </ul>
            }
            <h1 class="font-display text-2xl sm:text-3xl font-bold">{title.split('/').slice(-1).join('').replace(/.md$/, '')}</h1>
            <ul class="flex flex-wrap gap-4 mt-6 min-h-14">
              <li class="group">
                <span class="text-xs opacity-75 inline-flex items-center">
                  Stage
                  <a href="/garden/stages-of-my-note" class="opacity-0 group-hover:opacity-50 inline-flex ml-1 items-center hover:text-primary-700 dark:hover:text-primary-500">
                    <PhInfoBold aria-hidden="true"></PhInfoBold>
                    <span class="sr-only">Information about stage</span>
                  </a>
                </span>
                <NoteStage stage={0 + ((abstract) ? 1 : 0) + ((cover) ? 1 : 0)}></NoteStage>
              </li>
              {(created) && <li>
                <span class="text-xs opacity-75">Created</span>
                <div class="text-sm font-medium mt-[0.12rem]"><time datetime={created}>{new Date(created).toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</time></div>
              </li>}
              {(updated) && <li>
                <span class="text-xs opacity-75">Updated</span>
                <div class="text-sm font-medium mt-[0.12rem]"><time datetime={updated}>{new Date(updated).toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</time></div>
              </li>}
              {(unlisted) && <li>
                <span class="text-xs opacity-75">Publicity</span>
                <div class="text-sm font-medium">Unlisted</div>
              </li>}
              <NoteShare client:only="svelte" title={title} text={abstract}></NoteShare>
            </ul>
            { (abstract) && <div class="mt-6">
                <blockquote class="italic text-sm opacity-60">
                  <span class="font-medium sr-only">Abstract:</span> {abstract}
                </blockquote>
              </div>
            }
          </header>
        </div>
        <div class="lg:grid grid-cols-[1fr_32ch]">
          { headings.length > 3 &&
            <div class="col-start-2 row-start-1">
              <div class="sticky top-content transition-all lg:opacity-decrease-distraction hover:opacity-100">
                <div class="max-w-[65ch] mx-auto">
                  <details class="md:text-sm max-w-[48ch] lg:mx-none lg:max-w-[34ch] mb-8 border rounded border-gray-500/30">
                    <summary class="select-none font-display font-bold hover:opacity-75 cursor-pointer py-2 px-3">Contents</summary>
                    <ul class="list-disc pl-8 pt-3 pb-2 border-t border-gray-500/30">
                      {headings.map((h) => 
                          <li class="font-sans mb-1 pl-1 py-1 md:py-0" style={`margin-left: ${h.depth - 1}em;`}>
                            <a href={`#${h.slug}`} class="hover:opacity-75 decoration-none hover:underline">{h.text}</a>
                          </li>
                        )
                      }
                    </ul>
                  </details>
                </div>
              </div>
            </div>
          }
          <div class="col-start-1 row-start-1">
            <NoteProseSection>
              <slot />
            </NoteProseSection>
          </div>
        </div>
      </article>
    </main>
    { doc.documentsFrom().length > 0 || outgoingLinks.length > 0 && 
      <div class="mx-auto max-w-container px-4 lg:opacity-decrease-distraction hover:opacity-100 transition-opacity lg:pr-[32ch]">
        <div class="">
          <div class="mx-auto max-w-[65ch] border-t border-dashed border-gray-500/50 py-12">
            <h1 class="text-sm opacity-75 mb-3 font-display font-bold" id="related-notes">Related Notes</h1>
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-3 gap-y-6">
              { doc && doc.documentsFrom().length > 0 &&
                <div>
                  <h2 class="text-xs opacity-75 font-display">Backlinks</h2>
                  <ul class="space-y-1 mt-2">
                    { doc.documentsFrom().map((o) =>
                        <li>
                          <NoteCardSmall url={o.url()} title={o.frontmatter().title} abstract={o.frontmatter().abstract} isExist={true}></NoteCardSmall>
                        </li>
                      )
                    }
                  </ul>
                </div>
              }
              { outgoingLinks.length > 0 &&
                <div>
                  <h2 class="text-xs opacity-75 font-display">Outgoing Links</h2>
                  <ul class="space-y-1 mt-2">
                    { outgoingLinks.map((o) =>
                        <li>
                          <NoteCardSmall url={o.url} title={o.title} abstract={o.abstract} isExist={o.isExist}></NoteCardSmall>
                        </li>
                      )
                    }
                  </ul>
                </div>
              }
            </div>
          </div>
        </div>
      </div>
    }
  </div>
</BaseLayout>